<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADQAAAA0CAYAAADFeBvrAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARpSURBVGhD3ZlLKLxfGMd/LgssWEgolKJIUUpyyyULFpKFhbuSWxKyIBZsERtL5BYpKRKi3OWW
        hUg2IkpR2AhRPL95jvP6z2u+5veaGWbm/61P+H6fc97zNGbmnPf9oxP9z4CmPQNNewaa9gw0VZSXlxPL
        3d0d5jYGNFVsb2+LhvLz82Guj7e3N5WVldHg4CDt7u7S9fU1PT8/08PDA52cnNDy8jK1t7dTWloaHG8B
        oKmCF8HKzs6GuYuLC3V0dNDLy4uo+44ODg6+nNdEoKniq4acnZ1pdnZWZPpaWlqi5uZmSk9Pp/DwcPL3
        96fAwECKiYmh3Nxc6u7upvPzc1n9n6qqqlTzmwg0VaCGWlpahKdoZWWFYmNjVeO0UF1dTU9PT3IWEr8H
        BATAWo1AU4XSUEZGhvj74uJC/M3a2NggDw8PgzHfJSsrS874roaGBlinAWiqUBoqLi4WPxUlJibCenMY
        HR2VsxNNTU3Bmn8ATRVKQ4pOT09hnaXIzMyUVyJaWFiANUaAporPDXV1dVFvby8NDQ19MDExQX5+fnC8
        KQQFBcmrEfX398OaL4Cmir29PTm1cXFTaLypREREyJlJvGqoBgBNFTwZf6TyjgFRUVFBNTU15ODgAMeb
        Q21trWyJYA6Apk1xeHgoGlpdXYX5J6BpUzg5OYmGWMHBwbBGD2jaHD09PaKh9fV1mOsBTZvD0dFRNMTi
        VwzVSKBpk+zs7IiG6urqYC6Bpk1SWFgoGtrf34e5BJo2iaurq2iIhXIJNG0WRZ6enjDXAU2bhQ+ErJSU
        FJjrgKa5Z5IfY3FxUTTEB0WU6zA0Ly8vxSAjL6vVGB8fF2urrKyEuQ5D8+bmRgzizSHKrQmfkVilpaUw
        12Fo8sciKykpySCzNrxTYCmnZ4Chqdz44J00yq3J7e2tWFtkZCTMdRiara2tYlBfX59BZm0UoUxiaMbH
        x4tB/F5CubUICwsT6+IblyiXQFMMZPG3M8qtQWdnp1jTyMgIzCXQpM3NTTG4qakJ5tbg7e1NrCkhIQHm
        EmiKe8+KUP7b8M5AEcr1gKbg9fVVTFBQUADz34Rv+rMaGxthrgc0Bby9UITy3yIvL0+uQtM6oPmBsmuY
        m5uD+W+giM9DKP8END/g/ZwivhWMan6Sq6srce3j42OYA6CpgvdNiqKjo2HNT7C1tSWv+q1/eWgaMDw8
        LKcmSk1NhTWWRL8ZX19fWPMF0IRMTk7KS5B4PoRqLIHyicYKDQ2FNUaA5pe0tbXJS5F4CmeJZ0MKRUVF
        cuZ3+fj4wLp/AE2jJCcny0u+a2xszKzG+Ev87u5OzkZ0dHQE6zQCTU1MT0/LJbyLP4n4xr2Wky5v//lZ
        62cZOVprBZqa8fLyopmZGbkctc7OzmhtbY3m5+fFvQB+oz8+PspUrfr6eji/CUDTJEpKSsQzVy26v7+n
        gYEBioqKgnOZATTNxs3NjeLi4sSzJf6Gz8nJEe+VkJAQWG9BoGnPQNOegaY9A017Bpp2yh/6C0PRlKQU
        RpflAAAAAElFTkSuQmCC
</value>
  </data>
</root>